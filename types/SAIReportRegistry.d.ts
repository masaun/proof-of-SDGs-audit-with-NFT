/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface SAIReportRegistryInterface extends ethers.utils.Interface {
  functions: {
    "getSAIReport(address,address)": FunctionFragment;
    "getSomething()": FunctionFragment;
    "organizations(uint256)": FunctionFragment;
    "proofOfAuditNFT()": FunctionFragment;
    "registerNewSAIReport(address,address,uint8,string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getSAIReport",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getSomething",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "organizations",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proofOfAuditNFT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "registerNewSAIReport",
    values: [string, string, BigNumberish, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "getSAIReport",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSomething",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "organizations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proofOfAuditNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerNewSAIReport",
    data: BytesLike
  ): Result;

  events: {};
}

export class SAIReportRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: SAIReportRegistryInterface;

  functions: {
    getSAIReport(
      organization: string,
      auditor: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, number, string] & {
          organization: string;
          auditor: string;
          targetGoalInSDGs: number;
          contentHashOfSAIReport: string;
        }
      ] & {
        _saiReport: [string, string, number, string] & {
          organization: string;
          auditor: string;
          targetGoalInSDGs: number;
          contentHashOfSAIReport: string;
        };
      }
    >;

    "getSAIReport(address,address)"(
      organization: string,
      auditor: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, number, string] & {
          organization: string;
          auditor: string;
          targetGoalInSDGs: number;
          contentHashOfSAIReport: string;
        }
      ] & {
        _saiReport: [string, string, number, string] & {
          organization: string;
          auditor: string;
          targetGoalInSDGs: number;
          contentHashOfSAIReport: string;
        };
      }
    >;

    getSomething(
      overrides?: CallOverrides
    ): Promise<[string] & { _something: string }>;

    "getSomething()"(
      overrides?: CallOverrides
    ): Promise<[string] & { _something: string }>;

    organizations(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "organizations(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    proofOfAuditNFT(overrides?: CallOverrides): Promise<[string]>;

    "proofOfAuditNFT()"(overrides?: CallOverrides): Promise<[string]>;

    registerNewSAIReport(
      _organization: string,
      _auditor: string,
      _targetGoalInSDGs: BigNumberish,
      _contentHashOfSAIReport: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "registerNewSAIReport(address,address,uint8,string)"(
      _organization: string,
      _auditor: string,
      _targetGoalInSDGs: BigNumberish,
      _contentHashOfSAIReport: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  getSAIReport(
    organization: string,
    auditor: string,
    overrides?: CallOverrides
  ): Promise<
    [string, string, number, string] & {
      organization: string;
      auditor: string;
      targetGoalInSDGs: number;
      contentHashOfSAIReport: string;
    }
  >;

  "getSAIReport(address,address)"(
    organization: string,
    auditor: string,
    overrides?: CallOverrides
  ): Promise<
    [string, string, number, string] & {
      organization: string;
      auditor: string;
      targetGoalInSDGs: number;
      contentHashOfSAIReport: string;
    }
  >;

  getSomething(overrides?: CallOverrides): Promise<string>;

  "getSomething()"(overrides?: CallOverrides): Promise<string>;

  organizations(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "organizations(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  proofOfAuditNFT(overrides?: CallOverrides): Promise<string>;

  "proofOfAuditNFT()"(overrides?: CallOverrides): Promise<string>;

  registerNewSAIReport(
    _organization: string,
    _auditor: string,
    _targetGoalInSDGs: BigNumberish,
    _contentHashOfSAIReport: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "registerNewSAIReport(address,address,uint8,string)"(
    _organization: string,
    _auditor: string,
    _targetGoalInSDGs: BigNumberish,
    _contentHashOfSAIReport: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    getSAIReport(
      organization: string,
      auditor: string,
      overrides?: CallOverrides
    ): Promise<
      [string, string, number, string] & {
        organization: string;
        auditor: string;
        targetGoalInSDGs: number;
        contentHashOfSAIReport: string;
      }
    >;

    "getSAIReport(address,address)"(
      organization: string,
      auditor: string,
      overrides?: CallOverrides
    ): Promise<
      [string, string, number, string] & {
        organization: string;
        auditor: string;
        targetGoalInSDGs: number;
        contentHashOfSAIReport: string;
      }
    >;

    getSomething(overrides?: CallOverrides): Promise<string>;

    "getSomething()"(overrides?: CallOverrides): Promise<string>;

    organizations(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "organizations(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    proofOfAuditNFT(overrides?: CallOverrides): Promise<string>;

    "proofOfAuditNFT()"(overrides?: CallOverrides): Promise<string>;

    registerNewSAIReport(
      _organization: string,
      _auditor: string,
      _targetGoalInSDGs: BigNumberish,
      _contentHashOfSAIReport: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "registerNewSAIReport(address,address,uint8,string)"(
      _organization: string,
      _auditor: string,
      _targetGoalInSDGs: BigNumberish,
      _contentHashOfSAIReport: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getSAIReport(
      organization: string,
      auditor: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSAIReport(address,address)"(
      organization: string,
      auditor: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSomething(overrides?: CallOverrides): Promise<BigNumber>;

    "getSomething()"(overrides?: CallOverrides): Promise<BigNumber>;

    organizations(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "organizations(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proofOfAuditNFT(overrides?: CallOverrides): Promise<BigNumber>;

    "proofOfAuditNFT()"(overrides?: CallOverrides): Promise<BigNumber>;

    registerNewSAIReport(
      _organization: string,
      _auditor: string,
      _targetGoalInSDGs: BigNumberish,
      _contentHashOfSAIReport: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "registerNewSAIReport(address,address,uint8,string)"(
      _organization: string,
      _auditor: string,
      _targetGoalInSDGs: BigNumberish,
      _contentHashOfSAIReport: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getSAIReport(
      organization: string,
      auditor: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSAIReport(address,address)"(
      organization: string,
      auditor: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSomething(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getSomething()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    organizations(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "organizations(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proofOfAuditNFT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "proofOfAuditNFT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    registerNewSAIReport(
      _organization: string,
      _auditor: string,
      _targetGoalInSDGs: BigNumberish,
      _contentHashOfSAIReport: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "registerNewSAIReport(address,address,uint8,string)"(
      _organization: string,
      _auditor: string,
      _targetGoalInSDGs: BigNumberish,
      _contentHashOfSAIReport: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
