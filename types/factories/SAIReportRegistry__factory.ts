/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SAIReportRegistry } from "../SAIReportRegistry";

export class SAIReportRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _something: string,
    overrides?: Overrides
  ): Promise<SAIReportRegistry> {
    return super.deploy(
      _something,
      overrides || {}
    ) as Promise<SAIReportRegistry>;
  }
  getDeployTransaction(
    _something: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_something, overrides || {});
  }
  attach(address: string): SAIReportRegistry {
    return super.attach(address) as SAIReportRegistry;
  }
  connect(signer: Signer): SAIReportRegistry__factory {
    return super.connect(signer) as SAIReportRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SAIReportRegistry {
    return new Contract(address, _abi, signerOrProvider) as SAIReportRegistry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_something",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organization",
        type: "address",
      },
    ],
    name: "getSAIReport",
    outputs: [
      {
        internalType: "string",
        name: "_contentHashOfSAIReport",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "organizations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_organization",
        type: "address",
      },
      {
        internalType: "address",
        name: "_auditor",
        type: "address",
      },
      {
        internalType: "string",
        name: "_contentHashOfSAIReport",
        type: "string",
      },
    ],
    name: "registerNewSAIReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516200085e3803806200085e833981016040819052610031916101cd565b61006660405180604001604052806009815260200168536f6d657468696e6760b81b8152508261008060201b6101ff1760201c565b80516100799060009060208401906100ee565b505061030e565b6100c982826040516024016100969291906102a5565b60408051601f198184030181529190526020810180516001600160e01b03908116634b5c427760e01b179091526100cd16565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546100fa906102d3565b90600052602060002090601f01602090048101928261011c5760008555610162565b82601f1061013557805160ff1916838001178555610162565b82800160010185558215610162579182015b82811115610162578251825591602001919060010190610147565b5061016e929150610172565b5090565b5b8082111561016e5760008155600101610173565b634e487b7160e01b600052604160045260246000fd5b60005b838110156101b85781810151838201526020016101a0565b838111156101c7576000848401525b50505050565b6000602082840312156101df57600080fd5b81516001600160401b03808211156101f657600080fd5b818401915084601f83011261020a57600080fd5b81518181111561021c5761021c610187565b604051601f8201601f19908116603f0116810190838211818310171561024457610244610187565b8160405282815287602084870101111561025d57600080fd5b61026e83602083016020880161019d565b979650505050505050565b6000815180845261029181602086016020860161019d565b601f01601f19169290920160200192915050565b6040815260006102b86040830185610279565b82810360208401526102ca8185610279565b95945050505050565b600181811c908216806102e757607f821691505b6020821081141561030857634e487b7160e01b600052602260045260246000fd5b50919050565b610540806200031e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063cadf185814610046578063cf7498a31461006f578063e792dd8a14610084575b600080fd5b61005961005436600461031e565b6100af565b604051610066919061038d565b60405180910390f35b61008261007d3660046103b6565b610143565b005b610097610092366004610488565b6101d5565b6040516001600160a01b039091168152602001610066565b6060600080546100be906104a1565b80601f01602080910402602001604051908101604052809291908181526020018280546100ea906104a1565b80156101375780601f1061010c57610100808354040283529160200191610137565b820191906000526020600020905b81548152906001019060200180831161011a57829003601f168201915b50505050509050919050565b6001600160a01b0380841660009081526002602081815260408084209487168452938152929091208351909261017f9284019190850190610269565b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0394909416939093179092555050565b600181815481106101e557600080fd5b6000918252602090912001546001600160a01b0316905081565b61024482826040516024016102159291906104dc565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b179052610248565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054610275906104a1565b90600052602060002090601f01602090048101928261029757600085556102dd565b82601f106102b057805160ff19168380011785556102dd565b828001600101855582156102dd579182015b828111156102dd5782518255916020019190600101906102c2565b506102e99291506102ed565b5090565b5b808211156102e957600081556001016102ee565b80356001600160a01b038116811461031957600080fd5b919050565b60006020828403121561033057600080fd5b61033982610302565b9392505050565b6000815180845260005b818110156103665760208185018101518683018201520161034a565b81811115610378576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006103396020830184610340565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156103cb57600080fd5b6103d484610302565b92506103e260208501610302565b9150604084013567ffffffffffffffff808211156103ff57600080fd5b818601915086601f83011261041357600080fd5b813581811115610425576104256103a0565b604051601f8201601f19908116603f0116810190838211818310171561044d5761044d6103a0565b8160405282815289602084870101111561046657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561049a57600080fd5b5035919050565b600181811c908216806104b557607f821691505b602082108114156104d657634e487b7160e01b600052602260045260246000fd5b50919050565b6040815260006104ef6040830185610340565b82810360208401526105018185610340565b9594505050505056fea26469706673582212208fe5e419e668334ee64790a1e95e66f32e87f5f60bd7c43964d9ae7e6d6886bb64736f6c634300080a0033";
