/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SAIReportRegistry } from "../SAIReportRegistry";

export class SAIReportRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _something: string,
    overrides?: Overrides
  ): Promise<SAIReportRegistry> {
    return super.deploy(
      _something,
      overrides || {}
    ) as Promise<SAIReportRegistry>;
  }
  getDeployTransaction(
    _something: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_something, overrides || {});
  }
  attach(address: string): SAIReportRegistry {
    return super.attach(address) as SAIReportRegistry;
  }
  connect(signer: Signer): SAIReportRegistry__factory {
    return super.connect(signer) as SAIReportRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SAIReportRegistry {
    return new Contract(address, _abi, signerOrProvider) as SAIReportRegistry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_something",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organization",
        type: "address",
      },
      {
        internalType: "address",
        name: "auditor",
        type: "address",
      },
    ],
    name: "getSAIReport",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "organization",
            type: "address",
          },
          {
            internalType: "address",
            name: "auditor",
            type: "address",
          },
          {
            internalType: "string",
            name: "contentHashOfSAIReport",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.SAIReport",
        name: "_saiReport",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSomething",
    outputs: [
      {
        internalType: "string",
        name: "_something",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "organizations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_organization",
        type: "address",
      },
      {
        internalType: "address",
        name: "_auditor",
        type: "address",
      },
      {
        internalType: "string",
        name: "_contentHashOfSAIReport",
        type: "string",
      },
    ],
    name: "registerNewSAIReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a2338038062000a238339810160408190526200003491620001ea565b6200006c60405180604001604052806009815260200168536f6d657468696e6760b81b815250826200008960201b620003381760201c565b805162000081906000906020840190620000fb565b50506200033f565b620000d68282604051602401620000a2929190620002d0565b60408051601f198184030181529190526020810180516001600160e01b03908116634b5c427760e01b17909152620000da16565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054620001099062000302565b90600052602060002090601f0160209004810192826200012d576000855562000178565b82601f106200014857805160ff191683800117855562000178565b8280016001018555821562000178579182015b82811115620001785782518255916020019190600101906200015b565b50620001869291506200018a565b5090565b5b808211156200018657600081556001016200018b565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001d4578181015183820152602001620001ba565b83811115620001e4576000848401525b50505050565b600060208284031215620001fd57600080fd5b81516001600160401b03808211156200021557600080fd5b818401915084601f8301126200022a57600080fd5b8151818111156200023f576200023f620001a1565b604051601f8201601f19908116603f011681019083821181831017156200026a576200026a620001a1565b816040528281528760208487010111156200028457600080fd5b62000297836020830160208801620001b7565b979650505050505050565b60008151808452620002bc816020860160208601620001b7565b601f01601f19169290920160200192915050565b604081526000620002e56040830185620002a2565b8281036020840152620002f98185620002a2565b95945050505050565b600181811c908216806200031757607f821691505b602082108114156200033957634e487b7160e01b600052602260045260246000fd5b50919050565b6106d4806200034f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ec3b6c1461005157806358fa75fb1461006f578063cf7498a31461008f578063e792dd8a146100a4575b600080fd5b6100596100cf565b6040516100669190610488565b60405180910390f35b61008261007d3660046104be565b610161565b60405161006691906104f1565b6100a261009d36600461054a565b61025d565b005b6100b76100b236600461061c565b61030e565b6040516001600160a01b039091168152602001610066565b6060600080546100de90610635565b80601f016020809104026020016040519081016040528092919081815260200182805461010a90610635565b80156101575780601f1061012c57610100808354040283529160200191610157565b820191906000526020600020905b81548152906001019060200180831161013a57829003601f168201915b5050505050905090565b6040805160608082018352600080835260208084018290528385018390526001600160a01b0387811683526002808352868420888316855283528684208751958601885280548316865260018101549092169285019290925290810180549495929491928401916101d190610635565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd90610635565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b5050509190925250919695505050505050565b6001600160a01b03808416600081815260026020818152604080842095881680855295825290922080546001600160a01b0319908116909417815560018101805490941690941790925583516102b8928401918501906103a2565b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0394909416939093179092555050565b6001818154811061031e57600080fd5b6000918252602090912001546001600160a01b0316905081565b61037d828260405160240161034e929190610670565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b179052610381565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546103ae90610635565b90600052602060002090601f0160209004810192826103d05760008555610416565b82601f106103e957805160ff1916838001178555610416565b82800160010185558215610416579182015b828111156104165782518255916020019190600101906103fb565b50610422929150610426565b5090565b5b808211156104225760008155600101610427565b6000815180845260005b8181101561046157602081850181015186830182015201610445565b81811115610473576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061049b602083018461043b565b9392505050565b80356001600160a01b03811681146104b957600080fd5b919050565b600080604083850312156104d157600080fd5b6104da836104a2565b91506104e8602084016104a2565b90509250929050565b60208152600060018060a01b0380845116602084015280602085015116604084015250604083015160608084015261052c608084018261043b565b949350505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561055f57600080fd5b610568846104a2565b9250610576602085016104a2565b9150604084013567ffffffffffffffff8082111561059357600080fd5b818601915086601f8301126105a757600080fd5b8135818111156105b9576105b9610534565b604051601f8201601f19908116603f011681019083821181831017156105e1576105e1610534565b816040528281528960208487010111156105fa57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561062e57600080fd5b5035919050565b600181811c9082168061064957607f821691505b6020821081141561066a57634e487b7160e01b600052602260045260246000fd5b50919050565b604081526000610683604083018561043b565b8281036020840152610695818561043b565b9594505050505056fea2646970667358221220f0c679d7e698a994238e3b090f816351fe5887bf3849b60265037431f42fc28d64736f6c634300080a0033";
