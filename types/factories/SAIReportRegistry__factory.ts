/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SAIReportRegistry } from "../SAIReportRegistry";

export class SAIReportRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _proofOfAuditNFT: string,
    overrides?: Overrides
  ): Promise<SAIReportRegistry> {
    return super.deploy(
      _proofOfAuditNFT,
      overrides || {}
    ) as Promise<SAIReportRegistry>;
  }
  getDeployTransaction(
    _proofOfAuditNFT: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_proofOfAuditNFT, overrides || {});
  }
  attach(address: string): SAIReportRegistry {
    return super.attach(address) as SAIReportRegistry;
  }
  connect(signer: Signer): SAIReportRegistry__factory {
    return super.connect(signer) as SAIReportRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SAIReportRegistry {
    return new Contract(address, _abi, signerOrProvider) as SAIReportRegistry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ProofOfAuditNFT",
        name: "_proofOfAuditNFT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organization",
        type: "address",
      },
      {
        internalType: "address",
        name: "auditor",
        type: "address",
      },
    ],
    name: "getSAIReport",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "organization",
            type: "address",
          },
          {
            internalType: "address",
            name: "auditor",
            type: "address",
          },
          {
            internalType: "enum DataTypes.TargetGoalInSDGs",
            name: "targetGoalInSDGs",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "contentHashOfSAIReport",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.SAIReport",
        name: "_saiReport",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "organizations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofOfAuditNFT",
    outputs: [
      {
        internalType: "contract ProofOfAuditNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_organization",
        type: "address",
      },
      {
        internalType: "address",
        name: "_auditor",
        type: "address",
      },
      {
        internalType: "enum DataTypes.TargetGoalInSDGs",
        name: "_targetGoalInSDGs",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_contentHashOfSAIReport",
        type: "string",
      },
    ],
    name: "registerNewSAIReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161071c38038061071c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610689806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806358fa75fb14610051578063735650381461007a5780639b5087571461008f578063e792dd8a146100ba575b600080fd5b61006461005f366004610410565b6100cd565b6040516100719190610459565b60405180910390f35b61008d610088366004610516565b610200565b005b6000546100a2906001600160a01b031681565b6040516001600160a01b039091168152602001610071565b6100a26100c83660046105ff565b610331565b6040805160808082018352600080835260208084018290528385018290526060808501526001600160a01b038781168352600282528583208782168452825285832086519485018752805482168552600181015491821692850192909252939491939091830190600160a01b900460ff16601081111561014f5761014f610443565b601081111561016057610160610443565b815260200160028201805461017490610618565b80601f01602080910402602001604051908101604052809291908181526020018280546101a090610618565b80156101ed5780601f106101c2576101008083540402835291602001916101ed565b820191906000526020600020905b8154815290600101906020018083116101d057829003601f168201915b5050509190925250919695505050505050565b6001600160a01b03808516600081815260026020908152604080832094881680845294909152902080546001600160a01b0319908116909217815560018101805492831684178155909285926001600160a81b03191617600160a01b83601081111561026e5761026e610443565b02179055508151610288906002830190602085019061035b565b5060018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0388811691821790925591546040516335313c2160e11b815260048101939093521690636a62784290602401600060405180830381600087803b15801561031257600080fd5b505af1158015610326573d6000803e3d6000fd5b505050505050505050565b6001818154811061034157600080fd5b6000918252602090912001546001600160a01b0316905081565b82805461036790610618565b90600052602060002090601f01602090048101928261038957600085556103cf565b82601f106103a257805160ff19168380011785556103cf565b828001600101855582156103cf579182015b828111156103cf5782518255916020019190600101906103b4565b506103db9291506103df565b5090565b5b808211156103db57600081556001016103e0565b80356001600160a01b038116811461040b57600080fd5b919050565b6000806040838503121561042357600080fd5b61042c836103f4565b915061043a602084016103f4565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b6000602080835260018060a01b03808551168285015280828601511660408501525060408401516011811061049e57634e487b7160e01b600052602160045260246000fd5b80606085015250606084015160808085015280518060a086015260005b818110156104d75782810184015186820160c0015283016104bb565b818111156104e957600060c083880101525b50601f01601f19169390930160c001949350505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561052c57600080fd5b610535856103f4565b9350610543602086016103f4565b925060408501356011811061055757600080fd5b9150606085013567ffffffffffffffff8082111561057457600080fd5b818701915087601f83011261058857600080fd5b81358181111561059a5761059a610500565b604051601f8201601f19908116603f011681019083821181831017156105c2576105c2610500565b816040528281528a60208487010111156105db57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60006020828403121561061157600080fd5b5035919050565b600181811c9082168061062c57607f821691505b6020821081141561064d57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122039782352f1bdd9eb31a3654ee9339358383008ae411186f5da3c2c040339e16264736f6c634300080a0033";
